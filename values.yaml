# Default values for jellyfin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/jellyfin/jellyfin
  tag: "2024070805"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# Setting this to true enables DLNA which requires the pod to be attached to the
# host network in order to be useful - this can break things like ingress to the service
# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#hosts-namespaces
# https://jellyfin.org/docs/general/networking/dlna.html
enableDLNA: false

service:
  port: 8096
  loadBalancerIP: 192.168.86.7
  annotations:
    metallb.universe.tf/allow-shared-ip: jellyfin-svc
  type: LoadBalancer

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  config:
    enabled: true
    ## jellyfin configuration data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    # existingClaim: your-claim
    # subPath: some-subpath
    accessMode: ReadWriteOnce
    size: 1Gi
  media:
    enabled: false
    ## Directory where media is persisted
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    existingClaim: media-nfs
    # subPath: some-subpath
    accessMode: ReadWriteOnce
    size: 10Gi
  extraExistingClaimMounts: []
    # - name: external-mount
    #   mountPath: /srv/external-mount
    ## A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound
    #   existingClaim:
    #   readOnly: true

resources:
  limits:
   cpu: 4000m
   memory: 6Gi
  requests:
   cpu: 200m
   memory: 6Gi

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumes:
  - name: media-nfs
    nfs:
      server: 192.168.86.61
      path: /volume1/Media
  - name: renderd129
    hostPath:
      path: /dev/dri/renderD129
  - name: dmaheap
    hostPath:
      path: /dev/dma_heap
  - name: mali0
    hostPath:
      path: /dev/mali0
  - name: rga
    hostPath:
      path: /dev/rga
  - name: mppservice
    hostPath:
      path: /dev/mpp_service
  - name: iep
    hostPath:
      path: /dev/iep
  - name: vpuservice
    hostPath:
      path: /dev/vpu_service
  - name: hevcservice
    hostPath:
      path: /dev/hevc_service
  - name: rkvdec
    hostPath:
      path: /dev/rkvdec
  - name: rkvenc
    hostPath:
      path: /dev/rkvenc
  - name: vepu
    hostPath:
      path: /dev/vepu
  - name: h265e
    hostPath:
      path: /dev/h265e

extraVolumeMounts:
  - mountPath: /media-nfs
    name: media-nfs
  - mountPath: /dev/dri/renderD129
    name: renderd129
  - mountPath: /dev/dma_heap
    name: dmaheap
  - mountPath: /dev/mali0
    name: mali0
  - mountPath: /dev/rga
    name: rga
  - mountPath: /dev/mpp_service
    name: mppservice
  - mountPath: /dev/iep
    name: iep
  - mountPath: /dev/vpu_service
    name: vpuservice
  - mountPath: /dev/hevc_service
    name: hevcservice
  - mountPath: /dev/rkvdec
    name: rkvdec
  - mountPath: /dev/rkvenc
    name: rkvenc
  - mountPath: /dev/vepu
    name: vepu
  - mountPath: /dev/h265e
    name: h265e

securityContext:
  privileged: true
  runAsUser: 1000
  runAsGroup: 1000